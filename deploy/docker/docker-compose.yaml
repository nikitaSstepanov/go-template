
services:
    postgres:
        container_name: postgres
        image: postgres:15-alpine
        environment:
            POSTGRES_USER: "admin"
            POSTGRES_PASSWORD: "root"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        volumes:
            - ./volumes/pgdata:/var/lib/postgresql/data
        networks:
            - internal

    redis:
        container_name: redis
        image: redis:alpine
        environment:
            REDIS_PASSWORD: "root"
            REDIS_USER: "admin"
            REDIS_USER_PASSWORD: "root"
            REDIS_DATABASES: 1
        healthcheck:
            test: ["CMD", "redis-cli", "--raw", "$REDIS_PASSWORD", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        volumes:
            - ./volumes/rsdata:/data
        networks:
            - internal

    app:
        container_name: app
        image: nikitasstepanov/app:latest
        environment:
            CONFIG_PATH: "config/docker.yaml"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        networks:
            - internal
        ports:
          - 8080:8080

volumes:
    pgdata:
    rsdata:

networks:
  internal:
